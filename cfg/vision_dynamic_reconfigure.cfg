#!/usr/bin/env python
PACKAGE = "dynamic_reconfigure"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator() 


gen.add("line_threshold", int_t, 0, "line_threshold", 0, 0, 255)

gen.add("BGR_min_yellow1", int_t, 0, "BGR_min_yellow1", 0, 0, 255)
gen.add("BGR_min_yellow2", int_t, 0, "BGR_min_yellow2", 0, 0, 255)
gen.add("BGR_min_yellow3", int_t, 0, "BGR_min_yellow3", 0, 0, 255)
gen.add("BGR_max_yellow1", int_t, 0, "BGR_max_yellow1", 0, 0, 255)
gen.add("BGR_max_yellow2", int_t, 0, "BGR_max_yellow2", 0, 0, 255)
gen.add("BGR_max_yellow3", int_t, 0, "BGR_max_yellow3", 0, 0, 255)

gen.add("BGR_min_red1", int_t, 0, "BGR_min_red1", 0, 0, 255)
gen.add("BGR_min_red2", int_t, 0, "BGR_min_red2", 0, 0, 255)
gen.add("BGR_min_red3", int_t, 0, "BGR_min_red3", 0, 0, 255)
gen.add("BGR_max_red1", int_t, 0, "BGR_max_red1", 0, 0, 255)
gen.add("BGR_max_red2", int_t, 0, "BGR_max_red2", 0, 0, 255)
gen.add("BGR_max_red3", int_t, 0, "BGR_max_red3", 0, 0, 255)

gen.add("BGR_min_blueH1", int_t, 0, "BGR_min_blueH1", 0, 0, 255)
gen.add("BGR_min_blueH2", int_t, 0, "BGR_min_blueH2", 0, 0, 255)
gen.add("BGR_min_blueH3", int_t, 0, "BGR_min_blueH3", 0, 0, 255)
gen.add("BGR_max_blueH1", int_t, 0, "BGR_max_blueH1", 0, 0, 255)
gen.add("BGR_max_blueH2", int_t, 0, "BGR_max_blueH2", 0, 0, 255)
gen.add("BGR_max_blueH3", int_t, 0, "BGR_max_blueH3", 0, 0, 255)

gen.add("BGR_min_redX1", int_t, 0, "BGR_min_redX1", 0, 0, 255)
gen.add("BGR_min_redX2", int_t, 0, "BGR_min_redX2", 0, 0, 255)
gen.add("BGR_min_redX3", int_t, 0, "BGR_min_redX3", 0, 0, 255)
gen.add("BGR_max_redX1", int_t, 0, "BGR_max_redX1", 0, 0, 255)
gen.add("BGR_max_redX2", int_t, 0, "BGR_max_redX2", 0, 0, 255)
gen.add("BGR_max_redX3", int_t, 0, "BGR_max_redX3", 0, 0, 255)


gen.add("HSV_min_yellow1", int_t, 0, "HSV_min_yellow1", 0, 0, 180)
gen.add("HSV_min_yellow2", int_t, 0, "HSV_min_yellow2", 0, 0, 255)
gen.add("HSV_min_yellow3", int_t, 0, "HSV_min_yellow3", 0, 0, 255)
gen.add("HSV_max_yellow1", int_t, 0, "HSV_max_yellow1", 0, 0, 180)
gen.add("HSV_max_yellow2", int_t, 0, "HSV_max_yellow2", 0, 0, 255)
gen.add("HSV_max_yellow3", int_t, 0, "HSV_max_yellow3", 0, 0, 255)

gen.add("HSV_min_red1", int_t, 0, "HSV_min_red1", 0, 0, 180)
gen.add("HSV_min_red2", int_t, 0, "HSV_min_red2", 0, 0, 255)
gen.add("HSV_min_red3", int_t, 0, "HSV_min_red3", 0, 0, 255)
gen.add("HSV_max_red1", int_t, 0, "HSV_max_red1", 0, 0, 180)
gen.add("HSV_max_red2", int_t, 0, "HSV_max_red2", 0, 0, 255)
gen.add("HSV_max_red3", int_t, 0, "HSV_max_red3", 0, 0, 255)

gen.add("HSV_min_blueH1", int_t, 0, "HSV_min_blueH1", 0, 0, 180)
gen.add("HSV_min_blueH2", int_t, 0, "HSV_min_blueH2", 0, 0, 255)
gen.add("HSV_min_blueH3", int_t, 0, "HSV_min_blueH3", 0, 0, 255)
gen.add("HSV_max_blueH1", int_t, 0, "HSV_max_blueH1", 0, 0, 180)
gen.add("HSV_max_blueH2", int_t, 0, "HSV_max_blueH2", 0, 0, 255)
gen.add("HSV_max_blueH3", int_t, 0, "HSV_max_blueH3", 0, 0, 255)

gen.add("HSV_min_redX1", int_t, 0, "HSV_min_redX1", 0, 0, 180)
gen.add("HSV_min_redX2", int_t, 0, "HSV_min_redX2", 0, 0, 255)
gen.add("HSV_min_redX3", int_t, 0, "HSV_min_redX3", 0, 0, 255)
gen.add("HSV_max_redX1", int_t, 0, "HSV_max_redX1", 0, 0, 180)
gen.add("HSV_max_redX2", int_t, 0, "HSV_max_redX2", 0, 0, 255)
gen.add("HSV_max_redX3", int_t, 0, "HSV_max_redX3", 0, 0, 255)


exit(gen.generate(PACKAGE, "vision_dynamic", "vision_dynamic_reconfigure")) 
#first parameter is namespace's name
#second parameter is node's name
#third parameter is the current file's name
